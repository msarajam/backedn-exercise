// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/upbound/backend-exercise/pkg/storage (interfaces: CollectionOperations)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/upbound/backend-exercise/pkg/models"
	reflect "reflect"
)

// MockCollectionOperations is a mock of CollectionOperations interface
type MockCollectionOperations struct {
	ctrl     *gomock.Controller
	recorder *MockCollectionOperationsMockRecorder
}

// MockCollectionOperationsMockRecorder is the mock recorder for MockCollectionOperations
type MockCollectionOperationsMockRecorder struct {
	mock *MockCollectionOperations
}

// NewMockCollectionOperations creates a new mock instance
func NewMockCollectionOperations(ctrl *gomock.Controller) *MockCollectionOperations {
	mock := &MockCollectionOperations{ctrl: ctrl}
	mock.recorder = &MockCollectionOperationsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCollectionOperations) EXPECT() *MockCollectionOperationsMockRecorder {
	return m.recorder
}

// Fetch mocks base method
func (m *MockCollectionOperations) Fetch(arg0 string) (models.App, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fetch", arg0)
	ret0, _ := ret[0].(models.App)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Fetch indicates an expected call of Fetch
func (mr *MockCollectionOperationsMockRecorder) Fetch(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fetch", reflect.TypeOf((*MockCollectionOperations)(nil).Fetch), arg0)
}

// Insert mocks base method
func (m *MockCollectionOperations) Insert(arg0 models.App) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// Insert indicates an expected call of Insert
func (mr *MockCollectionOperationsMockRecorder) Insert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockCollectionOperations)(nil).Insert), arg0)
}
